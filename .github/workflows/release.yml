name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run type check
        run: npm run type-check
      
      - name: Run tests
        run: npm run test
      
      - name: Build application
        run: npm run build
      
      - name: Create build artifact
        run: |
          cd dist
          zip -r ../release-build-${{ github.ref_name }}.zip .
          cd ..
      
      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"
      
      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION=${{ steps.version.outputs.version }}
          
          # Extract changelog section for this version
          awk -v version="$VERSION" '
            /^## \[/ {
              if ($0 ~ "\\[" version "\\]") {
                found = 1
                next
              } else if (found) {
                exit
              }
            }
            found && /^## \[/ { exit }
            found { print }
          ' CHANGELOG.md > release_notes.md
          
          # If no specific version found, use Unreleased section
          if [ ! -s release_notes.md ]; then
            awk '/^## \[Unreleased\]/{flag=1;next} /^## \[/{flag=0} flag' CHANGELOG.md > release_notes.md
          fi
          
          # Set output for GitHub Actions
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.notes }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
          files: |
            release-build-${{ github.ref_name }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}